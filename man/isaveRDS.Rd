% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data-objects.R
\name{isaveRDS}
\alias{isaveRDS}
\alias{ireadRDS}
\title{iRODS serialization Interface for Single R Objects}
\usage{
isaveRDS(
  x,
  logical_path,
  offset = 0,
  count = 2000L,
  truncate = "true",
  verbose = FALSE,
  overwrite = FALSE
)

ireadRDS(
  logical_path,
  offset = 0,
  count = 2000L,
  verbose = FALSE,
  overwrite = FALSE
)
}
\arguments{
\item{x}{R object stored on iRODS server.}

\item{logical_path}{Destination path.}

\item{offset}{Offset in bytes into the data object (Defaults to FALSE).}

\item{count}{Maximum number of bytes to read or write.}

\item{truncate}{Truncates the object on open (defaults to TRUE).}

\item{verbose}{Show information about the http request and response.}

\item{overwrite}{Overwrite irods object or local file (defaults to FALSE).}
}
\value{
Invisibly the http response in case of \code{isaveRDS()}, or an R object
in case of \code{ireadRDS()}.
}
\description{
Store an in-memory R object in iRODS with \code{isaveRDS()}. If the destination
data-object or collection are not provided, the current iRODS collection and
the input R object name are used. Get data-objects or collections from iRODS
space in memory (R environment) with \code{ireadRDS()}.
}
\examples{
if(interactive()) {
# connect project to server
create_irods("http://localhost/irods-rest/0.9.3", "/tempZone/home")

# authentication
iauth()

# store into iRODS
isaveRDS(iris, "iris.rds")

# check if file is stored
ils()

# retrieve in native R format
ireadRDS("iris.rds")
}
}
